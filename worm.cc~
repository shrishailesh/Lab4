#include "worm.h"

using namespace std;

#define DEFAULTSCANRANGE 65536

bool     Worm::initialized = false;
// this is for setting vulnerabilities
Ptr<UniformRandomVariable> Worm::randVar = NULL;
uint32_t Worm::payloadlength = 376;
uint16_t Worm::infectionport = 1434;
//100% machines are vulnerable, please change the folowing for
// for making host's vulnerability be selected randomly
double Worm::vulnerability = 1.0;

Ipv4Address Worm::baseIP.SetBase ("10.1.0.0", "255.255.0.0");

uint32_t  Worm::totalinfected = 0;
uint32_t  Worm::totalvulnerable = 0;
uint32_t  Worm::totalinstances = 0;

string   Worm::signature = "WORM";
char *   Worm::wormdata = NULL;

WormTargetVector* Worm::defaultTV = NULL;

Worm::Worm()
  : infected(false), vulnerable(true), started(false), node(NULL), targetV(NULL)
{

  if (!initialized) {
    DoInitialize();
    initialized = true;
  }

  if (!wormdata) {
    PrepareWormData(wormdata);
  }

  if (vulnerability!=1.0)   {
    if (!randVar) 
	{
		randVar = CreateObject<UniformRandomVariable> ();
		randVar-> SetAttribute ("Min", DoubleValue(0.0));
    		randVar-> SetAttribute ("Max", DoubleValue(1.0));
	}
  }

  // if there is no target vector object defined then we are setting the 
  // it to be the Uniform random target vector class.
  if (!defaultTV) {
    defaultTV = new WTVUniform(DEFAULTSCANRANGE);
  }
}


